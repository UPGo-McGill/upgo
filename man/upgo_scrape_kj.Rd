% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/upgo_scrape_kj.R
\name{upgo_scrape_kj}
\alias{upgo_scrape_kj}
\title{Function to scrape Kijiji listings}
\usage{
upgo_scrape_kj(
  city,
  old_results = NULL,
  short_long = "both",
  recovery = FALSE,
  proxies = NULL,
  quiet = FALSE
)
}
\arguments{
\item{city}{A character vector indicating the city or cities to scrape.
Currently accepts "montreal", "toronto" or "vancouver" as inputs.}

\item{old_results}{A data frame. If the output of a previous run of
\code{upgo_scrape_kj} is supplied, listings previously scraped will be
incorporated into the new results.}

\item{short_long}{A character scalar. Should short-term rentals ("short"),
long-term rentals ("long") or both ("both", the default) be scraped?}

\item{recovery}{A logical vector. Should the function attempt to recover
results from a previous, unsuccessful function call?}

\item{proxies}{Character vector of IPs to use for proxy connections. If
the length is less than the number of processes set by `future::plan()`,
proxies will be recycled.}

\item{quiet}{A logical vector. Should the function execute quietly, or should
it return status updates throughout the function (default)?}
}
\value{
A table with one row per listing scraped.
}
\description{
\code{upgo_scrape_kj} scrapes all data from Kijiji rental listings in
Montreal, Toronto or Vancouver.
}
